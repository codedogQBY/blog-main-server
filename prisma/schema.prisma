generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id    String           @id @default(uuid()) @db.Char(36)
  name  String           @unique @db.VarChar(50)
  perms RolePermission[]
  users User[]
}

model Permission {
  id    String           @id @default(uuid()) @db.Char(36)
  name  String           @db.VarChar(100)
  code  String           @unique @db.VarChar(100)
  roles RolePermission[]
}

model RolePermission {
  roleId       String     @db.Char(36)
  permissionId String     @db.Char(36)
  permission   Permission @relation(fields: [permissionId], references: [id])
  role         Role       @relation(fields: [roleId], references: [id])

  @@id([roleId, permissionId])
  @@index([permissionId], map: "RolePermission_permissionId_fkey")
}

model User {
  id           String   @id @default(uuid()) @db.Char(36)
  name         String   @db.VarChar(100)
  mail         String   @unique @db.VarChar(100)
  passwordHash String   @db.VarChar(100)
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @updatedAt @db.Timestamp(0)
  isSuperAdmin Boolean  @default(false)
  roleId       String?  @db.Char(36)
  role         Role?    @relation(fields: [roleId], references: [id])

  @@index([roleId], map: "User_roleId_fkey")
}

model VerificationCode {
  id        String   @id @default(uuid()) @db.Char(36)
  mail      String   @db.VarChar(100)
  code      String   @db.Char(6)
  expiresAt DateTime

  @@index([mail])
}
